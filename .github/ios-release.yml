name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/bango.ipa"
          APPLE_ID: "lemotree2025@outlook.com"
          APP_SPECIFIC_PASSWORD: "nwsh-bxkr-aqef-qtjl"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
